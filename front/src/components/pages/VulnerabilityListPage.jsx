import React, { useState } from 'react';
import '../styles/StyleVulnerabilityList.scss';
import { Link } from 'react-router-dom';
import Data from '../../data/results.json'
import VulnerabilityCard from '../VulnerabilityCard/VulnerabilityCard';

function VulnerabilityListPage() {
    const [searchQuery, setSearchQuery] = useState(''); // Store the search input
    const [filteredData, setFilteredData] = useState(Data);


    const data = Data
    console.log(data)


    // Handle the search input change
    const handleSearchChange = (event) => {
        const query = event.target.value;
        setSearchQuery(query);

        // Filter data based on the search query
        if (query === '') {
            setFilteredData(Data); // If search is empty, show all
        } else {
            const filtered = Data.filter((person) =>
                person.name.toLowerCase().includes(query.toLowerCase()) // Case-insensitive search
            );
            setFilteredData(filtered);
        }
    };

    return (
        <section className="VulnerabilityListPage">
            <div className="container">
                <header className="VulnerabilityListPage__header">
                    <Link className='to_load_btn' to="/">
                        <button className="back__button">
                            Back
                        </button>
                    </Link>
                    <Link className='Logo__btn' to="/">
                        <h1 className='LoadingPage__logo'><span className='logo__purple'>Web</span>Check</h1>
                    </Link>
                </header>
                <div className="list__instruments">
                    <input
                        type="text"
                        placeholder="Search by name"
                        value={searchQuery}
                        onChange={handleSearchChange}
                    />
                </div>
                <div className="VulnerabilityListPage__main">
                    {/* {data.map((item, key) =>
                        <VulnerabilityCard key={key} item={item} />
                    )} */}

                    {filteredData.length > 0 ? (
                        filteredData.map((item, key) => (
                            <VulnerabilityCard key={key} item={item} />
                        ))
                    ) : (
                        <h2>No matching persons found</h2>
                    )}
                </div>
            </div>
        </section>
    )


}

export default VulnerabilityListPage;
